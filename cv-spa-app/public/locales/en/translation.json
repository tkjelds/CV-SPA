{
  "title": "Software developer with a passion for .net, Android and web development",
  "selection-title-about-me": "About me",
  "selection-title-projects": "Projects",
  "selection-title-contact": "Contact me",
  "section": {
    "about_me": {
      "hello": "Welcome",
      "description": "I'm Tore, a recent software engineering graduate specializing in .NET and Android development. I'm dedicated to engineering user-centric applications that seamlessly fuse innovation with technical prowess. Whether navigating intricate backend architectures or sculpting intuitive Android interfaces, I am steadfast in my pursuit of excellence and continual advancement within the dynamic sphere of software development."
    },
    "contact": {
      "contact_me": "Get in touch",
      "description": "Whether it's unraveling complex backend structures or shaping intuitive Android interfaces, I'm committed to excellence and growth. If any of this sounds interesting feel free to reach out."
    },
    "projects": {
      "kmd": {
        "title": "Calvin, a scrum analyzer",
        "card_description": "Calvin is a scrum analysis tool, designed to optimize the creation of teams and structure of sprints",
        "modal_description": "During my time as a student developer at KMD, I worked within the Research and Development department, working in an agile environment focused on developing a scrum analysis tool named Calvin. The project was implemented using the functional programming language F#. GraphQL served as the primary query tool, enabling the sorting and analysis of various sprints. The project facilitated the comparison of sprint durations, velocity, and the identification of product owners and scrum masters with the highest velocity. The development process incorporated Continuous Integration/Continuous Deployment (CI/CD) tools, Docker and Kubernetes."
      },
      "scooterSharing": {
        "title": "Scooter Sharing android application",
        "card_description": "Scooter sharing application, developed in kotlin with backend in Google Firebase, rent and return scooters with your smartphone.",
        "modal_description": "This project replicates a well-known scooter sharing application, aiming to enhance my proficiency in Kotlin and leverage contemporary backend frameworks, specifically Google Firebase. The entirety of the project was developed in Kotlin within the Android Studio environment. The application incorporates user authentication, featuring OAuth login. Google Firebase serves as the NoSQL database for storing users' past trips. Users have the option to rent bikes through QR codes or Bluetooth connections. Google Maps is utilized to display the user's location and guide them to the closest available scooter. The project showcases my knowledge in native android development, integration of cloud-based backend services and development of MVC based application."
      },
      "mcts": {
        "title": "Monte Carlo Tree Search",
        "card_description": "AI for UNO using MCTS, AI adapts in stochastic environments. Employed TDD and CI/CD principles for reliability and functionality.",
        "modal_description": "Monte Carlo Tree Search (MCTS) simulation in stochastic environments, with UNO as the domain. Leveraging my passion for game theory and artificial intelligence, I designed a robust system that enables the AI to make strategic decisions in an unpredictable environment. Throughout development i employed Test-Driven Development (TDD) principles, I ensured the reliability and functionality of the codebase at every stage of development. I also used CI/CD principles with automated testing when pushing. The MCTS algorithm navigates the intricate decision tree by sampling and simulating possible outcomes, providing the AI with the ability to adapt to the stochastic environment. The project showcases my knowledge in algorithm design, AI, and test development."
      },
      "dk_map": {
        "title": "Route finding application",
        "card_description": "The route-finding app, handles navigation through KD-tree and A* algorithm. Deprecated but perusable.",
        "modal_description": "The route-finding application is a project designed to provide efficient navigation solutions akin to Google Maps, focusing on optimizing performance through data structures and algorithms. The application utilizes a KD-tree, a multidimensional binary search tree, as its primary data structure for storing 2D spatial data. This choice enables rapid spatial indexing and efficient nearest neighbor searches, crucial for real-time route planning. The graph traversal algorithm employed is A*, renowned for its effectiveness in finding the shortest path between two points in a graph. Developed in Java using the Gradle build system, the user interface is implemented using JavaFX. With the integration of KD-tree and A*, the route-finding application achieves good speed and accuracy in generating optimal routes. This project is currently deprecated, as it is heavily dependant on an early version of Gradle. But the codebase is still able to be perused."
      },
      "geocache": {
        "title": "GeoCache android application",
        "card_description": "Geocache app in Kotlin with MVC structure, Room DB, Google Maps API, QR code scanning. ",
        "modal_description": "Geocache finding application is a project developed in Kotlin using Android Studio. It's structured around the Model-View-Controller (MVC) pattern, enabling seperation of concern, and increased modularity. The application leverages a local Room database to efficiently manage and store geocache data. Google Maps API integration enables users to visualize their current geocache locations. The user has the ability to scan geocaches using QR codes, providing an interactive way for users to engage with geocaching. The project was version controlled using github. The project showcases my ability to organize codebases based on popular design patterns."
      },
      "itforundersøgelse": {
        "title": "IT feasibility study",
        "card_description": "IT feasibility study at NEXT Media Gymnasium: Analysis of teachers' digital teaching materials and technology solution proposals.",
        "modal_description": "The project revolves around conducting an IT feasibility study at NEXT Copenhagen Media Gymnasium. The purpose of the IT investigation was to explore how teachers at NEXT Copenhagen Media Gymnasium share digital teaching materials with students. The project utilizes theory and methods from the book 'Professionel IT-forundersøgelse' (Professional IT Investigation), Bødker et al., 2008, detailing how the project was designed following the four phases of the MUST method (Preparation, Focus, Immersion, and Renewal phases). The project demonstrates my ability to analyze users' relationships with technology and apply that knowledge to develop technological solution proposals. The project was conducted in collaboration with ITU, as a part of my degree"
      },
      "spa": {
        "title": "Developer portfolio SPA",
        "card_description": "Responsive React SPA developer portfolio with i18n for multilingual support and Materials UI for consistent design.",
        "modal_description": "The developer portfolio is a single-page application (SPA) showcasing my abilities in web development. Developed using React, the website offers a responsive and dynamic user interface. The main focus of the website of responsiveness and the ability to access and view from different devices with differing screen dimensions. The project incorporates the use of i18n ensuring multilingual support, enabling users to access content in different languages. Additionally, Materials UI is employed to maintain a consistent and visually appealing design across the platform. This portfolio highlights technical skills but also demonstrates a commitment to user accessibility."
      }
    }
  }
}
